const{promises:fsPromises}=require("fs"),jsdom=require("jsdom"),path=require("path"),htmlMinifier=require("html-minifier"),prettify=require("pretty"),{readFile}=fsPromises,{JSDOM}=jsdom;let document,srcDir="";const resolvePath=a=>path.resolve(process.cwd(),a.trim()),resolveDirPath=a=>`${srcDir}/${a}`,getFile=a=>readFile(resolvePath(a)),getFileString=(a,b)=>getFile(a).then(a=>Promise.resolve(a.toString(b))),base64Map={svg:"image/svg+xml",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/jpeg"},ignoreSourceStartingWith=["http://","https://"],containsIgnoreSourceStartingWith=a=>ignoreSourceStartingWith.some(b=>a.startsWith(b)),resolveImageToBase64=({element:a,srcAttributeName:b="src"})=>{const c=a.getAttribute(b);return!c||c.startsWith("http")?Promise.resolve():getFileString(resolveDirPath(c),"base64").then(d=>{a.setAttribute(b,`data:${base64Map[path.extname(c).slice(1)]||"image"};base64, ${d}`)})},resolveExternalScript=({element:a})=>a.getAttribute("src")?containsIgnoreSourceStartingWith(a.getAttribute("src"))?Promise.resolve():getFileString(resolveDirPath(a.getAttribute("src"))).then(b=>{a.innerHTML=b,a.removeAttribute("src")}):Promise.resolve(),resolveExternalIcon=async({element:a})=>a.getAttribute("href")?containsIgnoreSourceStartingWith(a.getAttribute("href"))?Promise.resolve():resolveImageToBase64({element:a,srcAttributeName:"href"}):Promise.resolve(),resolveExternalStyleSheet=({element:a})=>{const b=a.getAttribute("href"),{parentElement:c}=a;return b?containsIgnoreSourceStartingWith(a.getAttribute("href"))?Promise.resolve():getFileString(resolveDirPath(b)).then(b=>{const d=document.createElement("style");d.innerHTML=b,c.replaceChild(d,a)}):Promise.resolve()},resolveExternalLink=({element:a})=>{switch(a.getAttribute("rel")){case"stylesheet":return resolveExternalStyleSheet({element:a});case"icon":return resolveExternalIcon({element:a});default:return Promise.resolve();}},resolveElement=(a,b)=>"script"===b?resolveExternalScript({element:a}):"link"===b?resolveExternalLink({element:a}):"img"===b?resolveImageToBase64({element:a}):Promise.resolve(),resolveTag=a=>Promise.all(Array.from(document.getElementsByTagName(a.trim())).map(b=>resolveElement(b,a))),htmlInlineExternal=({src:a,tags:d=["script","link","img"],pretty:b,minify:c})=>getFileString(a).then(e=>{const f=new JSDOM(e);return document=f.window.document,srcDir=path.dirname(a),Promise.all(d.map(a=>resolveTag(a))).then(()=>{let a=f.serialize();return b?a=prettify(a):c&&(a=htmlMinifier.minify(a,{collapseWhitespace:!0,minifyCSS:!0,minifyJS:!0})),Promise.resolve(a)})});module.exports=htmlInlineExternal;